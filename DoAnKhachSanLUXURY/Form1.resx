<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="fluentFormDefaultManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnQLDichVu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IPEM7uTt2wAAAABJRU5ErkJggg==
</value>
  </data>
</root>